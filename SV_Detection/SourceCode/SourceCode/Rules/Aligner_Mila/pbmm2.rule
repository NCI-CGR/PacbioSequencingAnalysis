import sys
import os
import glob
sys.path.insert(0, '/scratch/lix33/lxwg/SourceCode/PacbioSV/SourceCode/Scripts')
from RunPacbioSV import *

configfile: "../../Configs/MilaTesting.yaml"
workdir: os.environ['PWD']
shell.executable('bash')

strRef = config["GeneralInfo"]["ref"]
strBAMDir = config["GeneralInfo"]["bamDir"]

# Rules -> Go!
      
rule pbmm2_addMDTag:
    input:
        lambda wildcards: config["BAM_pbmm2"][wildcards.wcSampleID]        
    output: 
        strBAMDir + "/pbmm2/{wcRefVersion}/{wcSampleID}/{wcSampleID}.MD.bam"                 
    params:
        ref = strRef
    threads:
        16
    log:
        strBAMDir + "/pbmm2/{wcRefVersion}/{wcSampleID}/Log/{wcSampleID}.MD.log"
    benchmark:
        strBAMDir + "/pbmm2/{wcRefVersion}/{wcSampleID}/Benchmark/{wcSampleID}.MD.benchmark.txt"
    shell:
        # Do not need -Ar (suggested by samtools maintenance team)
        "samtools calmd -@ {threads} {input} {params.ref} -b > {output}"
        
rule pbmm2_sortBAM:
    input:
        rules.pbmm2_addMDTag.output
    output:
        strBAMDir + "/pbmm2/{wcRefVersion}/{wcSampleID}/{wcSampleID}.MD.sorted.bam"
    threads:
        32
    shell:
        "samtools sort -@ {threads} -o {output} {input}"                

rule pbmm2_buildSortedIndex:
    input:
        rules.pbmm2_sortBAM.output
    output:
        strBAMDir + "/pbmm2/{wcRefVersion}/{wcSampleID}/{wcSampleID}.MD.sorted.bam.bai"
    threads:
        32
    shell:
        "samtools index -@ {threads} {input} {output}"
        


