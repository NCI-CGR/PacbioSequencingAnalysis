import sys
import os
sys.path.insert(0, '/scratch/lix33/lxwg/SourceCode/PacbioSV/SourceCode/Scripts')
from RunPacbioSV import *

configfile: "../../Configs/MilaTesting.yaml"
workdir: os.environ['PWD']
shell.executable('bash')

# Get general dir
svRootDir = config["GeneralInfo"]["svDir"]
refSeq = config["GeneralInfo"]["ref"]

bamRootDir = config["GeneralInfo"]["bamDir"]

rule pbsv_discover:
    input:
        bam = bamRootDir + "/{wcAligner}/{wcRefVersion}/{wcSampleID}/{wcSampleID}.MD.sorted.bam"
    output:
        svsigFile = svRootDir + "/{wcRefVersion}/pbsv/{wcAligner}/{wcSampleID}/discover/{wcSampleID}.MD.sorted.svsig.gz", 
    log: 
        svRootDir + "/{wcRefVersion}/pbsv/{wcAligner}/{wcSampleID}/discover/Log/{wcSampleID}.MD.sorted.log"
    benchmark: 
        svRootDir + "/{wcRefVersion}/pbsv/{wcAligner}/{wcSampleID}/discover/Benchmark/{wcSampleID}.MD.sorted.benchmark"
    params:        
        loglevel = "INFO",
        mgcPerc = 97.0,
        tr_bed = config["GeneralInfo"]["tr_bed"]
    shell:
        """
        pbsv discover --log-level {params.loglevel} \
                      --min-gap-comp-id-perc {params.mgcPerc} \
                      --tandem-repeats {params.tr_bed} \
                      {input.bam} {output} > {log} 2>&1
        """

rule pbsv_call:
    input:        
        svsigs = rules.pbsv_discover.output,
        reference = refSeq
    output: 
        vcf = svRootDir + "/{wcRefVersion}/pbsv/{wcAligner}/{wcSampleID}/minReads_{wcMinReads}/{wcSampleID}.MD.sorted.{wcMinReads}.pbsv.vcf",
    log: 
        svRootDir + "/{wcRefVersion}/pbsv/{wcAligner}/{wcSampleID}/minReads_{wcMinReads}/Log/{wcSampleID}.MD.sorted.{wcMinReads}.pbsv.log"
    benchmark: 
        svRootDir + "/{wcRefVersion}/pbsv/{wcAligner}/{wcSampleID}/minReads_{wcMinReads}/Benchmark/{wcSampleID}.MD.sorted.{wcMinReads}.pbsv.benchmark"
    params:
        extra = "--ccs -m 20 -A 3 -O 3",
        loglevel = "INFO",
        minReads = lambda wildcards: wildcards.wcMinReads
    threads: 
        24
    message: "Executing {rule}: Calling structural variants from SVSIGs: {input.svsigs}"
    shell:
        """
        pbsv call {params.extra} \
                  --log-level {params.loglevel} \
                  --num-threads {threads} \
                  --call-min-reads-per-strand-all-samples {params.minReads} \
                  {input.reference} {input.svsigs} {output} > {log} 2>&1
        """
        